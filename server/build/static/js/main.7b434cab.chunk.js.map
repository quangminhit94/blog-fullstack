{"version":3,"sources":["store/actions/actions.js","store/actions/action_types.js","containers/Container1.js","containers/Header.js","utils/history.js","containers/Profile.js","containers/Form1.js","functional/Callback.js","functional/PrivateComponent.js","functional/UnAuthRedirect.js","functional/RenderListItem.js","functional/Signup.js","Blog/Posts.js","Blog/AddPost.js","Blog/ShowPost.js","Blog/EditPost.js","Profile/ShowUser.js","Profile/SendMessage.js","Profile/ShowMessages.js","Profile/ReplyToMessage.js","utils/AuthCheck.js","Routes.js","utils/Auth.js","App.js","store/reducers/auth_reducer.js","store/reducers/user_reducer.js","store/reducers/posts_reducer.js","store/reducers/index.js","index.js"],"names":["userInput","payload","type","addProfile","Container1","onClick","console","log","props","isAuthenticated","action1","action2","action_creator1","action_creator2","action_creator3","this","user_text","Component","connect","state","reducer1","user_reducer","dispatch","text","ACTIONS","Header","to","style","padding","is_authenticated","Button","color","variant","auth","logout","login","auth_reducer","createBrowserHistory","Profile","handleClickOpen","pid","setState","open","post_id","handleClickClose","deletePost","Axios","delete","data","then","res","catch","err","setTimeout","history","replace","RenderProfile","profile","nickname","src","picture","alt","email","name","email_verified","RenderPost","post","Card","width","height","marginBottom","paddingBottom","CardHeader","title","pathname","subheader","className","date_created","CardContent","overflow","body","user_id","db_profile","uid","get","params","set_user_posts","user_posts","map","key","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","posts_reducer","posts","Form1","value","handleChange","event","target","handleSubmit","preventDefault","input_action_creator","onSubmit","onChange","Callback","PrivateComponent","UnAuthRedirect","RenderListItem","location","list_item","num","bool","SignUp","size","Posts","handleTransition","opacity","add_search_posts_to_state","posts_search","animate_search_posts","posts_search_motion","i","add_posts_to_state","num_posts","length","page_range","slice_posts","animate_posts","indexOfLastPost","activePage","posts_per_page","indexOfFirstPost","posts_slice","slice","posts_motion","handlePageChange","pageNumber","handleSearch","search_query","posts_success","search_posts","error","RenderPosts","moment","format","paddingLeft","textDecoration","author","likes","set_posts","TextField","label","margin","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","posts_failure","AddPost","username","action","multiline","rows","ShowPost","RenderComments","comment","delete_comment_id","cid","isEdited","cur_user_id","add_comments_to_state","comments","comments_arr","animate_comments","comments_motion","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","com","newArr","handleCommentDelete","filter","handleClose","handleCommentChange","window","scroll","top","lef","behavior","handleUpdate","edited_comment","put","handleDelete","handleLikes","like_user_ids","includes","like_post","like_user_id","set_comments","cursor","EditPost","handleTitleChange","handleBodyChange","goBack","ShowUser","set_profile","set_db_posts","scrollTo","left","user_profile","other_user_db_profile","db_other_user_posts","SendMessage","message_to_username","message_sender","message_to","message_title","message_body","ShowMessages","RenderMessages","message","TableRow","TableCell","deleteMessage","mid","set_user_messages","Table","TableHead","TableBody","user_messages","messages","ReplyToMessage","AuthCheck","sendProfileToDb","setDbProfile","loginSuccess","userProfile","loginFailure","removeProfile","removeDbProfile","auth0","authorize","handAuth","parseHash","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","getAccessToken","getItem","client","userInfo","removeItem","parse","WebAuth","domain","clientID","redirectUri","responseType","scope","PrivateRoute","component","render","Routes","login_success","add_profile","login_failure","remove_profile","exact","path","ReplytoMessage","hash","handleAuthentication","axiosInstance","create","baseURL","App","hello","fetchDataUsingFetch","a","fetch","json","table","renderHelloUsingAxios","initialState","AuthReducer","userReducer","PostsReducer","rootReducer","combineReducers","UserReducer","persistedState","serializedState","loadFromLocalStorage","store","createStore","composeWithDevTools","applyMiddleware","subscribe","saveToLocalStorage","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7b434cab.chunk.js","sourcesContent":["import * as ACTION_TYPES from './action_types'\r\n\r\nexport const success = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SUCCESS\r\n\t}\r\n}\r\n\r\nexport const failure = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.FAILURE\r\n\t}\r\n}\r\n\r\nexport const userInput = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.USER_INPUT,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const loginSuccess = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.LOGIN_SUCCESS\r\n\t}\r\n}\r\n\r\nexport const loginFailure = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.LOGIN_FAILURE\r\n\t}\r\n}\r\n\r\nexport const addProfile = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.ADD_PROFILE,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removeProfile = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_PROFILE\r\n\t}\r\n}\r\n\r\nexport const setDbProfile = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SET_DB_PROFILE,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removeDbProfile = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_DB_PROFILE\r\n\t}\r\n}\r\n\r\nexport const fetchDbPosts = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.FETCH_DB_POSTS,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removeDbPosts = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_DB_POSTS\r\n\t}\r\n}\r\n\r\nexport const fetchUserPosts = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.FETCH_USER_POSTS,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removeUserPosts = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_USER_POSTS\r\n\t}\r\n}\r\n\r\nexport const fetchSearchPosts = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SEARCH_POSTS_SUCCESS,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removeSearchPosts = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SEARCH_POSTS_FAILURE\r\n\t}\r\n}\r\n\r\nexport const fetchPostComments = (payload) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.FETCH_POST_COMMENTS,\r\n\t\tpayload\r\n\t}\r\n}\r\n\r\nexport const removePostComments = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_POST_COMMENTS\r\n\t}\r\n}\r\n\r\nexport const getOtherUserDbProfile = (profile) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SET_OTHER_USER_DB_PROFILE,\r\n\t\tpayload: profile\r\n\t}\r\n}\r\n\r\nexport const removeOtherUserDbProfile = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE\r\n\t}\r\n}\r\n\r\nexport const getOtherUserDbPosts = (post) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SET_OTHER_USER_DB_POSTS,\r\n\t\tpayload: post\r\n\t}\r\n}\r\n\r\nexport const removeOtherUserDbPosts = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS\r\n\t}\r\n}\r\n\r\nexport const setUserMessages = (messages) => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.SET_USER_MESSAGES,\r\n\t\tpayload: messages\r\n\t}\r\n}\r\n\r\nexport const removeUserMessages = () => {\r\n\treturn {\r\n\t\ttype: ACTION_TYPES.REMOVE_USER_MESSAGES\r\n\t}\r\n}","export const SUCCESS = \"SUCCESS\"\r\nexport const FAILURE = \"FAILURE\"\r\nexport const USER_INPUT = \"USER_INPUT\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\nexport const ADD_PROFILE = \"ADD_PROFILE\"\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\"\r\nexport const REMOVE_USER_POSTS = \"REMOVE_USER_POSTS\"\r\nexport const FETCH_POST_COMMENTS = \"FETCH_POST_COMMENTS\"\r\nexport const REMOVE_POST_COMMENTS = \"REMOVE_POST_COMMENTS\"\r\nexport const SEARCH_POSTS_SUCCESS = \"SEARCH_POSTS_SUCCESS\"\r\nexport const SEARCH_POSTS_FAILURE = \"SEARCH_POSTS_FAILURE\"\r\nexport const SET_OTHER_USER_DB_PROFILE = \"SET_OTHER_USER_DB_PROFILE\"\r\nexport const REMOVE_OTHER_USER_DB_PROFILE = \"REMOVE_OTHER_USER_DB_PROFILE\"\r\nexport const SET_OTHER_USER_DB_POSTS = \"SET_OTHER_USER_DB_POSTS\"\r\nexport const REMOVE_OTHER_USER_DB_POSTS = \"REMOVE_OTHER_USER_DB_POSTS\"\r\nexport const SET_USER_MESSAGES = \"SET_USER_MESSAGES\"\r\nexport const REMOVE_USER_MESSAGES = \"REMOVE_USER_MESSAGES\"\r\n\r\n","import React, { Component } from 'react'\r\nimport * as ACTIONS from '../store/actions/actions'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass Container1 extends Component {\r\n\r\n  render() {\r\n    const user_text = \"User Text\"\r\n    return (\r\n      <div>\r\n        <button onClick={() => console.log(this.props.isAuthenticated)}>Get State</button>\r\n        <button onClick={() => this.props.action1()}>Dispatch Action 1</button>\r\n        <button onClick={() => this.props.action2()}>Dispatch Action 2</button>\r\n        <button onClick={() => this.props.action_creator1()}>Dispatch Action Creator 1</button>\r\n        <button onClick={() => this.props.action_creator2()}>Dispatch Action Creator 2</button>\r\n        <button onClick={() => this.props.action_creator3(user_text)}>Dispatch Action Creator 3</button>\r\n        {this.props.isAuthenticated\r\n          ? <h1>{this.props.user_text}</h1>\r\n          : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: state.reducer1.isAuthenticated,\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    action1: () => dispatch(ACTIONS.success()),\r\n    action2: () => dispatch(ACTIONS.failure()),\r\n    action_creator1: () => dispatch(ACTIONS.success()),\r\n    action_creator2: () => dispatch(ACTIONS.failure()),\r\n    action_creator3: (text) => dispatch(ACTIONS.userInput(text))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container1)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to='/' style={{ padding: '5px' }}>\r\n          Home\r\n          </Link>\r\n        <Link to='/profile' style={{ padding: '5px' }}>\r\n          Profile\r\n          </Link>\r\n        <Link to='/component1' style={{ padding: '5px' }}>\r\n          Component 1\r\n          </Link>\r\n        <Link to='/form1' style={{ padding: '5px' }}>\r\n          Form 1\r\n          </Link>\r\n        <Link to='/render_list' style={{ padding: '5px' }}>\r\n          List\r\n          </Link>\r\n        <Link to='/posts' style={{ padding: '5px' }}>\r\n          Forum\r\n          </Link>\r\n        <Link to='/private_route' style={{ padding: '5px' }}>\r\n          Private Route\r\n          </Link>\r\n        {!this.props.is_authenticated\r\n          ? <Button color='secondary' variant='outlined' onClick={() => this.props.auth.login()}>Login</Button>\r\n          : <Button color='primary' variant='outlined' onClick={() => this.props.auth.logout()}>Logout</Button>\r\n        }\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    is_authenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport history from '../utils/history'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport class Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      post_id: null\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const user_id = this.props.db_profile[0].uid\r\n    Axios.get('/api/get/user_posts', { params: { user_id: user_id } })\r\n      .then((res) => this.props.set_user_posts(res.data))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  handleClickOpen = (pid) => (\r\n    this.setState({ open: true, post_id: pid })\r\n  )\r\n  handleClickClose = () => (\r\n    this.setState({ open: false, post_id: null })\r\n  )\r\n\r\n  deletePost = () => {\r\n    const post_id = this.state.post_id\r\n    console.log(post_id)\r\n    Axios.delete('/api/delete/post_comments', { data: { post_id: post_id } })\r\n      .then(() => Axios.delete('/api/delete/post', { data: { post_id: post_id } })\r\n        .then(res => console.log(res)))\r\n      .catch(err => console.log(err))\r\n      .then(() => this.handleClickClose())\r\n      .then(() => setTimeout(() => history.replace('/'), 700))\r\n  }\r\n  RenderProfile = (props) => {\r\n    return (\r\n      <div>\r\n        <h1>{props.profile.profile.nickname}</h1>\r\n        <br />\r\n        <img src={props.profile.profile.picture} alt=\"\" />\r\n        <br />\r\n        <h4>{props.profile.profile.email}</h4>\r\n        <h5>{props.profile.profile.name}</h5>\r\n        <h6>Email verified</h6>\r\n        {props.profile.profile.email_verified ? <p>YES</p> : <p>NO</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  RenderPost = post => (\r\n    <Card style={{ width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\r\n      <CardHeader\r\n        title={\r\n          <Link to={{ pathname: `/post/${post.post.pid}`, state: { post } }}>\r\n            {post.post.title}\r\n          </Link>\r\n        }\r\n        subheader={\r\n          <div className='FlexColumn'>\r\n            {console.log(post)}\r\n            <div className=\"FlexRow\">\r\n              {post.post.date_created}\r\n            </div>\r\n            <div className=\"FlexRow\">\r\n              <Link to={{ pathname: `/edit_post/${post.post.pid}`, state: { post } }}>\r\n                <button>Edit</button>\r\n              </Link>\r\n              <button onClick={() => this.handleClickOpen(post.post.pid)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        }\r\n      ></CardHeader>\r\n      <br />\r\n      <CardContent>\r\n        <span style={{ overflow: 'hidden' }}>{post.post.body}</span>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <this.RenderProfile profile={this.props.profile}></this.RenderProfile>\r\n        </div>\r\n        <div>\r\n          {console.log(this.state)}\r\n          <Link to={{ pathname: `/show_messages/${this.state.user_id}` }}>\r\n            <Button variant='contained' color='primary' type='submit'>Show Messages</Button>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {this.props.user_posts\r\n            ? this.props.user_posts.map(post =>\r\n              <this.RenderPost post={post} key={post.pid}></this.RenderPost>)\r\n            : null}\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClickClose}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'>\r\n          <DialogTitle id='alert-dialog-title'>Confirm delete?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id='alert-dialog-description'>\r\n              Deleting Posts\r\n              </DialogContentText>\r\n            <DialogActions>\r\n              <Button onClick={this.deletePost}>Agree</Button>\r\n              <Button onClick={this.handleClickClose}>Cancel</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.auth_reducer.profile,\r\n  user_posts: state.posts_reducer.user_posts,\r\n  db_profile: state.auth_reducer.db_profile\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_user_posts: posts => dispatch(ACTIONS.fetchUserPosts(posts))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Form1 extends Component {\r\n\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  handleChange = (event) => (\r\n    this.setState({ value: event.target.value })\r\n  )\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.input_action_creator(event.target.name.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Input </label>\r\n          <input id=\"name\" onChange={this.handleChange} type=\"text\" />\r\n          <button type=\"submit\" onSubmit={() => this.handleSubmit}> Submit </button>\r\n        </form>\r\n        <br />\r\n        <h3>React State:</h3>\r\n        <p>{this.state.value}</p>\r\n        <br />\r\n        <h3>Redux State:</h3>\r\n        <p>{this.props.user_text}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    input_action_creator: (text) => dispatch(ACTIONS.userInput(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form1);\r\n","import React from 'react'\r\n\r\nconst Callback = props => (\r\n  <div>\r\n    Callback\r\n  </div>\r\n);\r\n\r\nexport default Callback;\r\n","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n  <div>\r\n    Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;\r\n","import React from 'react'\r\n\r\nconst UnAuthRedirect = props => (\r\n  <div>\r\n    UnAuthRedirect\r\n    </div>\r\n);\r\n\r\nexport default UnAuthRedirect;\r\n","import React from 'react'\r\n\r\n\r\nconst RenderListItem = props => (\r\n  <div>\r\n    <h3>{props.location.state.list_item.text}</h3>\r\n    <h4> {props.location.state.list_item.num} </h4>\r\n    <div>{props.location.state.list_item.bool\r\n      ? <p>Boolean is True</p>\r\n      : <p>Boolean is False</p>\r\n    }\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default RenderListItem;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst SignUp = (props) => (\r\n  <div className=\"FlexRowMain\">\r\n    <div>\r\n      <h1>Signup and Create an Account</h1>\r\n      <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.auth.login()}>\r\n        Signup\r\n    </Button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport Axios from 'axios'\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\nexport class Posts extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posts: [],\r\n      opacity: 0,\r\n      posts_motion: [],\r\n      num_posts: 0,\r\n      page_range: 0,\r\n      activePage: 1,\r\n      posts_per_page: 5,\r\n      posts_slice: [],\r\n      posts_search: [],\r\n      posts_search_motion: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleTransition()\r\n    Axios.get('/api/get/all_posts')\r\n      .then(res => this.props.set_posts(res.data))\r\n      .then(() => this.add_posts_to_state(this.props.posts))\r\n      .catch(err => console.error(err))\r\n  }\r\n  handleTransition = () => {\r\n    setTimeout(() => this.setState({ opacity: 1 }), 400)\r\n  }\r\n  add_search_posts_to_state = (posts) => {\r\n    this.setState({ posts_search: [] })\r\n    this.setState({ posts_search: [...posts] })\r\n    this.animate_search_posts()\r\n  }\r\n  animate_search_posts = () => {\r\n    this.setState({ posts_search_motion: [] })\r\n    let i = 1\r\n    this.state.posts_search.map(post => {  // eslint-disable-line\r\n      setTimeout(() => { this.setState({ posts_search_motion: [...this.state.posts_search_motion, post] }) }, 400 * i);\r\n      i++;\r\n    })\r\n  }\r\n  add_posts_to_state = (posts) => {\r\n    this.setState({ posts: [...posts] })\r\n    this.setState({ num_posts: this.state.posts.length })\r\n    this.setState({ page_range: this.state.num_posts / 5 })\r\n\r\n    this.slice_posts();\r\n    this.animate_posts();\r\n  }\r\n  slice_posts = () => {\r\n    const indexOfLastPost = this.state.activePage * this.state.posts_per_page\r\n    const indexOfFirstPost = indexOfLastPost - this.state.posts_per_page\r\n\r\n\r\n    this.setState({ posts_slice: this.state.posts.slice(indexOfFirstPost, indexOfLastPost) })\r\n  }\r\n\r\n\r\n  animate_posts = () => {\r\n    this.setState({ posts_motion: [] })\r\n    let i = 1\r\n    this.state.posts_slice.map(post => {  // eslint-disable-line\r\n      setTimeout(() => { this.setState({ posts_motion: [...this.state.posts_motion, post] }) }, 400 * i);\r\n      i++;\r\n    })\r\n  }\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({ activePage: pageNumber });\r\n\r\n    setTimeout(() => { this.slice_posts() }, 50)\r\n    setTimeout(() => { this.animate_posts() }, 100)\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    const search_query = event.target.value\r\n\r\n    Axios.get('/api/get/search_posts', { params: { search_query: search_query } })\r\n      .then(res => this.props.posts_success(res.data))\r\n      .then(() => this.add_search_posts_to_state(this.props.search_posts))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  RenderPosts = post => (\r\n    <div className=\"CardStyles\">\r\n      <Card >\r\n        <CardHeader\r\n          title={<Link to={{ pathname: '/post/' + post.post.pid, state: { post } }}>\r\n            {post.post.title}\r\n          </Link>}\r\n          subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n                {moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a')}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                By:\r\n                <Link style={{ paddingLeft: '5px', textDecoration: 'none' }}\r\n                  to={{ pathname: \"/user/\" + post.post.author, state: { post } }}>\r\n                  {post.post.author}\r\n                </Link>\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                <i className=\"material-icons\">thumb_up</i>\r\n                <div className=\"notification-num-allposts\"> {post.post.likes} </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        <br />\r\n        <CardContent>\r\n          <span style={{ overflow: 'hidden' }}> {post.post.body} </span>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        {this.props.is_authenticated\r\n          ? <Link to='/add_post'>\r\n            <Button color='secondary' variant='contained'>Add Post</Button>\r\n          </Link>\r\n          : <Link to='/signup'>\r\n            <Button color='primary' variant='contained'>Sign Up to Add Posts</Button>\r\n          </Link>}\r\n\r\n        <div>\r\n          <TextField\r\n            id='search'\r\n            label='Search'\r\n            margin='normal'\r\n            onChange={this.handleSearch}></TextField>\r\n        </div>\r\n        <div>\r\n          {this.state.posts_search\r\n            ? this.state.posts_search_motion.map(post =>\r\n              <this.RenderPosts key={post.pid} post={post}></this.RenderPosts>\r\n            ) : null}\r\n        </div>\r\n\r\n        <div>\r\n          <h1>All Posts</h1>\r\n          {this.state.posts\r\n            ? this.state.posts_motion.map(post =>\r\n              <this.RenderPosts key={post.pid} post={post}></this.RenderPosts>\r\n            ) : null}\r\n          <Pagination\r\n            activePage={this.state.activePage}\r\n            itemsCountPerPage={5}\r\n            totalItemsCount={this.state.num_posts}\r\n            pageRangeDisplayed={this.state.page_range}\r\n            onChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts_reducer.posts,\r\n  is_authenticated: state.auth_reducer.is_authenticated,\r\n  search_posts: state.posts_reducer.search_posts\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_posts: posts => dispatch(ACTIONS.fetchDbPosts(posts)),\r\n  posts_success: posts => dispatch(ACTIONS.fetchSearchPosts(posts)),\r\n  posts_failure: () => dispatch(ACTIONS.removeSearchPosts())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport history from '../utils/history'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class AddPost extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const user_id = this.props.db_profile[0].uid\r\n    const username = this.props.db_profile[0].username\r\n    const data = {\r\n      title: event.target.title.value,\r\n      body: event.target.body.value,\r\n      username: username,\r\n      uid: user_id\r\n    }\r\n\r\n    Axios.post('/api/posts/post_to_db', data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form action='' onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal' />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='Body'\r\n            multiline\r\n            rows='4'\r\n            margin='normal' />\r\n          <br />\r\n          <button type='submit'>Submit</button>\r\n          <br />\r\n          <button onClick={() => history.replace('/posts')}>Cancel</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  db_profile: state.auth_reducer.db_profile\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport Axios from 'axios'\r\nimport history from '../utils/history'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport moment from 'moment'\r\n\r\nexport class ShowPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      comment: '',\r\n      cid: '',\r\n      opacity: 0,\r\n      delete_comment_id: 0,\r\n      comments_arr: [],\r\n      comments_motion: [],\r\n      cur_user_id: null,\r\n      likes: this.props.location.state.post.post.likes,\r\n      like_user_ids: this.props.location.state.post.post.like_user_id,\r\n      like_post: true, // if user already like the post, this will be false\r\n    }\r\n  }\r\n  RenderComments = comment => (\r\n    <div className={\r\n      this.state.delete_comment_id === comment.comment.cid\r\n        ? \"FadeOutComment\"\r\n        : \"CommentStyles\"\r\n    }>\r\n      <h3>{comment.comment.comment}</h3>\r\n      <small>\r\n\r\n        {(comment.comment.date_created) === 'Just Now'\r\n          ? <div> {comment.comment.isEdited\r\n            ? <span> Edited </span>\r\n            : <span> Just Now </span>}</div>\r\n          : moment(comment.comment.date_created).format('MMMM Do, YYYY | h:mm a')\r\n        }\r\n      </small>\r\n      <p>By: {comment.comment.author}</p>\r\n      {comment.cur_user_id === comment.comment.user_id\r\n        ? <Button onClick={() => this.handleClickOpen(comment.comment.cid, comment.comment.comment)}>\r\n          Edit\r\n        </Button>\r\n        : null}\r\n    </div>\r\n  )\r\n\r\n  componentDidMount() {\r\n    Axios.get('/api/get/all_post_comments', {\r\n      params:\r\n        { post_id: this.props.location.state.post.post.pid }\r\n    })\r\n      .then(res => this.props.set_comments(res.data))\r\n      .then(() => this.add_comments_to_state(this.props.comments))\r\n      .catch((err) => console.log(err));\r\n    // this.setCurUserID();\r\n    this.handleTransition();\r\n  }\r\n\r\n  handleTransition = () => (\r\n    setTimeout(() => this.setState({ opacity: 1 }), 400)\r\n  );\r\n\r\n  add_comments_to_state = (comments) => {\r\n    this.setState({ comments_arr: [...comments] })\r\n    this.animate_comments();\r\n  }\r\n\r\n  animate_comments = () => {\r\n    let i = 1\r\n    this.state.comments_arr.map(comment => {  // eslint-disable-line\r\n      setTimeout(() => { this.setState({ comments_motion: [...this.state.comments_motion, comment] }) }, 400 * i);\r\n      i++;\r\n    })\r\n  }\r\n\r\n  handleCommentSubmit = (submitted_comment) => {\r\n    setTimeout(() => {\r\n      this.setState({ comments_motion: [submitted_comment, ...this.state.comments_motion] })\r\n    }, 50);\r\n\r\n  }\r\n  handleCommentUpdate = (comment) => {\r\n    const commentIndex = this.state.comments_motion.findIndex(com => com.cid === comment.cid)\r\n    let newArr = [...this.state.comments_motion]\r\n    newArr[commentIndex] = comment\r\n    this.setState({ comments_motion: newArr })\r\n  }\r\n  handleCommentDelete = (cid) => {\r\n    this.setState({ delete_comment_id: cid })\r\n    const newArr = this.state.comments_motion.filter(com => com.cid !== cid)\r\n    setTimeout(() => this.setState({ comments_motion: newArr }), 900)\r\n  }\r\n\r\n  handleClickOpen = (cid, comment) => (\r\n    this.setState({ open: true, comment: comment, cid: cid })\r\n  )\r\n  handleClose = (cid, comment) => (\r\n    this.setState({ open: false, comment: '', cid: '' })\r\n  )\r\n\r\n  handleCommentChange = event => (\r\n    this.setState({ comment: event.target.value })\r\n  )\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.setState({ comment: '' })\r\n\r\n    const comment = event.target.comment.value\r\n    const user_id = this.props.db_profile[0].uid\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n\r\n    const temp_id = 54356\r\n    const just_now = 'Just Now'\r\n    const data = {\r\n      comment: comment,\r\n      post_id: post_id,\r\n      user_id: user_id,\r\n      username: username\r\n    }\r\n    const submitted_comment = {\r\n      cid: temp_id,\r\n      comment: comment,\r\n      user_id: user_id,\r\n      author: username,\r\n      date_created: just_now\r\n    }\r\n    Axios.post('/api/posts/comment_to_db', data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    window.scroll({ top: 0, lef: 0, behavior: 'smooth' })\r\n    this.handleCommentSubmit(submitted_comment)\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    const comment = this.state.comment\r\n    const cid = this.state.cid\r\n    const user_id = this.props.db_profile[0].uid\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n    const isEdited = true\r\n    const just_now = 'Just Now'\r\n\r\n    const data = {\r\n      cid: cid,\r\n      comment: comment,\r\n      post_id: post_id,\r\n      user_id: user_id,\r\n      username: username\r\n    }\r\n\r\n    const edited_comment = {\r\n      cid: cid,\r\n      comment: comment,\r\n      post_id: post_id,\r\n      user_id: user_id,\r\n      author: username,\r\n      date_created: just_now,\r\n      isEdited: isEdited\r\n    }\r\n    console.log(edited_comment)\r\n    Axios.put('/api/put/comment_to_db', data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    this.handleCommentUpdate(edited_comment)\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const cid = this.state.cid\r\n    Axios.delete('/api/delete/comment', { data: { cid: cid } })\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    this.handleCommentDelete(cid)\r\n  }\r\n\r\n  handleLikes = () => {\r\n    const user_id = this.props.db_profile[0].uid\r\n    const post_id = this.props.location.state.post.post.pid\r\n\r\n    const data = { uid: user_id, post_id: post_id }\r\n    console.log(this.props.location)\r\n    Axios.put('/api/put/likes', data)\r\n      .then(!this.state.like_user_ids.includes(user_id) && this.state.like_post\r\n        ? this.setState({ likes: this.state.likes + 1 })\r\n        : null)\r\n      .then(this.setState({ like_post: false }))\r\n      .catch(err => console.log(err))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>Post</h2>\r\n          <h4>{this.props.location.state.post.post.title}</h4>\r\n          <p>{this.props.location.state.post.post.body}</p>\r\n          <p>{this.props.location.state.post.post.author}</p>\r\n          <button\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={this.props.isAuthenticated\r\n              ? () => this.handleLikes()\r\n              : () => history.replace('/signup')}\r\n          >\r\n            <i className=\"material-icons\"> thumb_up</i>\r\n            <small className=\"notification-num-showpost\">{this.state.likes}</small>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <h2>All Comments:</h2>\r\n          {this.props.comments\r\n            ? this.state.comments_motion.map(comment =>\r\n              <this.RenderComments\r\n                comment={comment}\r\n                cur_user_id={this.props.db_profile[0].uid}\r\n                key={comment.cid}></this.RenderComments>)\r\n            : null}\r\n        </div>\r\n        <div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id='comment'\r\n              label='Comment'\r\n              margin='normal' />\r\n            <br />\r\n            {console.log(this.props)}\r\n            {this.props.isAuthenticated\r\n              ? <Button type='submit' color='primary' variant='contained'>Submit</Button>\r\n              : <Link to='/signup'>\r\n                <Button color='primary' variant='contained'>Sign Up to Comment</Button>\r\n              </Link>}\r\n\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'>\r\n            <DialogTitle id='alert-dialog-title'>Edit Comment</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id='alert-dialog-description'>\r\n                <input type='text' value={this.state.comment} onChange={this.handleCommentChange} />\r\n              </DialogContentText>\r\n              <DialogActions>\r\n                <Button onClick={() => { this.handleUpdate(); this.handleClose() }}>Agree</Button>\r\n                <Button onClick={() => this.handleClose()}>Cancel</Button>\r\n                <Button onClick={() => { this.handleDelete(); this.handleClose() }}>Delete</Button>\r\n              </DialogActions>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    )\r\n  } w\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.posts_reducer.comments,\r\n  db_profile: state.auth_reducer.db_profile,\r\n  isAuthenticated: state.auth_reducer.is_authenticated\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_comments: comment => dispatch(ACTIONS.fetchPostComments(comment))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport history from '../utils/history'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport class EditPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      title: '',\r\n      body: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: this.props.location.state.post.post.title,\r\n      body: this.props.location.state.post.post.body\r\n    })\r\n  }\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({ title: event.target.value })\r\n  }\r\n  handleBodyChange = (event) => {\r\n    this.setState({ body: event.target.value })\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const user_id = this.props.db_profile[0].uid\r\n    const username = this.props.db_profile[0].username\r\n    const pid = this.props.location.state.post.post.pid\r\n    const title = event.target.title.value\r\n    const body = event.target.body.value\r\n\r\n    const data = {\r\n      title: title,\r\n      body: body,\r\n      pid: pid,\r\n      uid: user_id,\r\n      username: username\r\n    }\r\n    console.log(data)\r\n\r\n    Axios.put(\"/api/put/post\", data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => history.replace('/profile'), 700))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='title'\r\n            margin='normal'\r\n            value={this.state.title}\r\n            onChange={this.handleTitleChange} />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='body'\r\n            multiline\r\n            rows='4'\r\n            margin='normal'\r\n            value={this.state.body}\r\n            onChange={this.handleBodyChange} />\r\n          <Button type='submit' variant='outlined' color='secondary'>Submit</Button>\r\n        </form>\r\n        <Button onClick={() => history.goBack()}>Cancel</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  db_profile: state.auth_reducer.db_profile\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport Axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport class ShowUser extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props.location)\r\n    const username = this.props.location.state.post.post.author\r\n    Axios.get('/api/get/other_user_profile_from_db', { params: { username: username } })\r\n      .then(res => this.props.set_profile(res.data))\r\n      .catch(err => console.error(err))\r\n    Axios.get('/api/get/other_user_posts_from_db', { params: { username: username } })\r\n      .then(res => this.props.set_db_posts(res.data))\r\n      .catch(err => console.error(err))\r\n\r\n    window.scrollTo({ top: 0, left: 0 })\r\n  }\r\n  RenderPosts = post => (\r\n    <div className=\"CardStyles\">\r\n      <Card >\r\n        <CardHeader\r\n          title={<Link to={{ pathname: '/post/' + post.post.pid, state: { post } }}>\r\n            {post.post.title}\r\n          </Link>}\r\n          subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n                {moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a')}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                By: {post.post.author}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                <i className=\"material-icons\">thumb_up</i>\r\n                <div className=\"notification-num-allposts\"> {post.post.likes} </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        <br />\r\n        <CardContent>\r\n          <span style={{ overflow: 'hidden' }}> {post.post.body} </span>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n\r\n  RenderProfile = (props) => (\r\n    <div>\r\n      <div className=\"FlexRow\">\r\n        <h1>{props.profile.username}</h1>\r\n      </div>\r\n      <div className=\"FlexRow\">\r\n        <Link to={{ pathname: '/send_message/', state: { props } }}>\r\n          <Button variant='contained' color='secondary' type='submit'>\r\n            Send Message\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"FlexRow\">\r\n          {this.props.user_profile\r\n            ? <this.RenderProfile profile={this.props.user_profile[0]} />\r\n            : null}\r\n        </div>\r\n        <div>\r\n          <h3>Lasted activity:</h3>\r\n          <div>\r\n            {this.props.user_posts\r\n              ? this.props.user_posts.map(post =>\r\n                <div>\r\n                  <this.RenderPosts key={post.pid} post={post} />\r\n                  <br />\r\n\r\n                </div>\r\n              )\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user_profile: state.user_reducer.other_user_db_profile,\r\n  user_posts: state.user_reducer.db_other_user_posts\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  set_db_posts: post => dispatch(ACTIONS.getOtherUserDbPosts(post)),\r\n  set_profile: profile => dispatch(ACTIONS.getOtherUserDbProfile(profile))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport history from '../utils/history'\r\n\r\nimport Axios from 'axios'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport class SendMessage extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = this.props.location.state.props.profile.username\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {\r\n      message_sender: message_from_username,\r\n      message_to: message_to_username,\r\n      message_title: message_title,\r\n      message_body: message_body\r\n    }\r\n\r\n    Axios.post('/api/post/message_to_db', data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => {\r\n        history.replace('/')\r\n      }, 400))\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal' />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='body'\r\n            multiline\r\n            rows='4'\r\n            margin='normal' />\r\n          <br />\r\n          <Button type='submit' variant='outlined' color='secondary'>Submit</Button>\r\n          <Button variant='outlined' color='primary' onClick={() => history.replace('/')}>Cancel</Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  db_profile: state.auth_reducer.db_profile\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendMessage)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport * as ACTIONS from '../store/actions/actions'\r\n\r\nimport history from '../utils/history'\r\nimport Axios from 'axios'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport class ShowMessages extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.db_profile[0].username\r\n    Axios.get('/api/get/user_messages', { params: { username: username } })\r\n      .then(res => this.props.set_user_messages(res.data))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n  RenderMessages = (props) => {\r\n    const { message } = props\r\n    return (\r\n      <TableRow>\r\n        <TableCell>\r\n          <p>From: {message.message_sender}</p>\r\n          <p>Title: {message.message_title}</p>\r\n          <p>From: {message.message_body}</p>\r\n          <small>{props.message.date_created}</small>\r\n          <Link to={{ pathname: '/reply_to_message', state: { props } }}>\r\n            <Button variant='contained' color='primary'>Reply</Button>\r\n          </Link>\r\n          <Button variant='outlined' color='primary' onClick={() => this.deleteMessage(props.message.mid)}>Delete</Button>\r\n          <Button variant='outlined' color='secondary' onClick={() => history.goBack()}>Cancel</Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  deleteMessage = (mid) => {\r\n    Axios.delete('/api/delete/user_messages', { data: { mid: mid } })\r\n      .then(res => console.log(res))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(() => setTimeout(function () { history.replace('/') }, 700))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Messages</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.user_messages\r\n              ? this.props.user_messages.map(message =>\r\n                <this.RenderMessages key={message.mid} message={message} />\r\n              )\r\n              : null}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  db_profile: state.auth_reducer.db_profile,\r\n  user_messages: state.user_reducer.user_messages\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  set_user_messages: messages => dispatch(ACTIONS.setUserMessages(messages))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowMessages)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport history from '../utils/history'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios'\r\n\r\nexport class ReplyToMessage extends Component {\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(this.props)\r\n    const message_to_username = this.props.location.state.props.message.message_sender\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {\r\n      message_sender: message_from_username,\r\n      message_to: message_to_username,\r\n      message_title: message_title,\r\n      message_body: message_body\r\n    }\r\n\r\n    Axios.post('/api/post/message_to_db', data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => {\r\n        history.replace('/')\r\n      }, 400))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Message:</h2>\r\n        <div className=\"FlexColumn\">\r\n          <div>\r\n            <p>{this.props.location.state.props.message.message_title}</p>\r\n          </div>\r\n          <div>\r\n            <p>{this.props.location.state.props.message.message_body}</p>\r\n          </div>\r\n          <div>\r\n            <p>By: {this.props.location.state.props.message.message_sender}</p>\r\n          </div>\r\n        </div>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal' />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='body'\r\n            multiline\r\n            rows='4'\r\n            margin='normal' />\r\n          <br />\r\n          <Button type='submit' variant='outlined' color='secondary'>Submit</Button>\r\n          <Button variant='outlined' color='primary' onClick={() => history.replace('/')}>Cancel</Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  db_profile: state.auth_reducer.db_profile\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReplyToMessage)\r\n","import React, { Component } from 'react'\r\nimport history from './history'\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\n\r\nclass AuthCheck extends Component {\r\n\r\n  sendProfileToDb = (profile) => {\r\n    const data = profile\r\n    Axios.post('api/posts/user_profile_to_db', data)\r\n      .then(Axios.get('api/get/user_profile_from_db', { params: { email: profile.profile.email } })\r\n        .then(res => this.props.setDbProfile(res.data)))\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated()) {\r\n      this.props.loginSuccess()\r\n      this.props.addProfile(this.props.auth.userProfile)\r\n      this.sendProfileToDb(this.props.auth.userProfile)\r\n      history.replace('/')\r\n    }\r\n    else {\r\n      this.props.loginFailure()\r\n      this.props.removeProfile()\r\n      this.props.removeDbProfile()\r\n      history.replace('/')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginSuccess: () => dispatch(ACTIONS.loginSuccess()),\r\n    loginFailure: () => dispatch(ACTIONS.loginFailure()),\r\n    addProfile: (profile) => dispatch(ACTIONS.addProfile(profile)),\r\n    removeProfile: () => dispatch(ACTIONS.removeProfile()),\r\n    setDbProfile: (profile) => dispatch(ACTIONS.setDbProfile(profile)),\r\n    removeDbProfile: () => dispatch(ACTIONS.removeDbProfile())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthCheck)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Container1 from './containers/Container1'\r\nimport Header from './containers/Header';\r\nimport Profile from './containers/Profile';\r\nimport Form1 from './containers/Form1';\r\n// import RenderList from './containers/renderlist';\r\n\r\n\r\n// import Component1 from './functional/component1';\r\nimport Callback from './functional/Callback';\r\nimport PrivateComponent from './functional/PrivateComponent';\r\nimport UnAuthRedirect from './functional/UnAuthRedirect';\r\n// import Home from './functional/home';\r\nimport RenderListItem from './functional/RenderListItem';\r\nimport SignUp from './functional/Signup';\r\n\r\nimport Posts from './Blog/Posts';\r\nimport AddPost from './Blog/AddPost';\r\nimport ShowPost from './Blog/ShowPost';\r\nimport EditPost from './Blog/EditPost';\r\n\r\nimport ShowUser from './Profile/ShowUser';\r\nimport SendMessage from './Profile/SendMessage';\r\nimport ShowMessages from './Profile/ShowMessages';\r\nimport ReplytoMessage from './Profile/ReplyToMessage';\r\n\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport Auth from './utils/Auth';\r\nimport AuthCheck from './utils/AuthCheck';\r\nimport history from './utils/history';\r\n\r\nimport { Router, Route, Switch, Redirect } from 'react-router';\r\n\r\n\r\n\r\n\r\nexport const auth = new Auth()\r\n\r\nconst handleAuthentication = (props) => {\r\n  if (props.location.hash) {\r\n    auth.handAuth()\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, auth }) => {\r\n  return (\r\n    <Route render={props => auth.isAuthenticated() === true\r\n      ? <Component auth={auth} {...props} />\r\n      : <Redirect to={{ pathname: '/signup' }} />\r\n    }\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\nclass Routes extends Component {\r\n  componentDidMount() {\r\n    if (auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      auth.getProfile(() => { this.props.add_profile(auth.userProfile) })\r\n      // setTimeout(() => {this.props.add_profile(auth.userProfile)}, 400)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history} >\r\n          <div>\r\n            <Header auth={auth} />\r\n            <Switch>\r\n              {/* <Route exact path='/' component={Home} /> */}\r\n              <Route exact path='/form1' component={Form1} />\r\n              <Route exact path='/container1' render={() => <Container1 auth={auth} />} />\r\n              <Route path='/auth_check' render={() => <AuthCheck auth={auth} />} />\r\n              <Route path='/redirect' component={UnAuthRedirect} />\r\n              {/* <Route path='/renderlist' component={RenderList} /> */}\r\n\r\n              <Route path=\"/user/:name\" component={ShowUser} />\r\n              <PrivateRoute path=\"/send_message\" auth={auth} component={SendMessage} />\r\n              <PrivateRoute path=\"/show_messages/:id\" auth={auth} component={ShowMessages} />\r\n              <PrivateRoute path=\"/reply_to_message\" auth={auth} component={ReplytoMessage} />\r\n\r\n              <Route path='/posts' component={Posts} />\r\n              <Route path='/post/:pid' component={ShowPost} />\r\n              <Route path='/edit_post/:pid' component={EditPost} />\r\n              <Route path='/add_post' component={AddPost} />\r\n              <Route path=\"/signup\" render={(props) => <SignUp auth={auth} {...props} />} />\r\n\r\n              <Route path='/callback' render={(props) => { handleAuthentication(props); return <Callback /> }} />\r\n              {/* <Route path=\"/component1\" render={(props) => <Component1 {...props} /> } /> */}\r\n\r\n              <Route path=\"/list_item/:id\" component={RenderListItem} />\r\n\r\n              <PrivateRoute path=\"/private_route\" auth={auth} component={PrivateComponent} />\r\n              <PrivateRoute path=\"/profile\" auth={auth} component={Profile} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.loginSuccess()),\r\n    login_failure: () => dispatch(ACTIONS.loginFailure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.addProfile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.removeProfile())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);\r\n","import history from './history'\r\nimport auth0 from 'auth0-js'\r\n\r\n// let instance = null\r\n\r\nexport default class Auth {\r\n  constructor() {\r\n    // if(!instance) {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: 'quangminhit94.auth0.com',\r\n      clientID: 'Ru77tV6TPmNvvi3GSMV3g981973RV7Oc',\r\n      redirectUri: 'http://3.14.143.161/callback',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile email'\r\n    })\r\n    this.userProfile = {}\r\n    // instance = this\r\n    // }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  login = () => {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  handAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/auth_check') }, 700);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if (localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if (accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n        if (profile) {\r\n          this.userProfile = { profile }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/auth_check') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport Routes from './Routes'\r\nimport './App.css'\r\n\r\nconst axiosInstance = Axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com'\r\n})\r\n\r\nclass App extends Component {\r\n  state = {\r\n    hello: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderHelloUsingAxios()\r\n    // this.renderFromJsonPlaceholder()\r\n    // this.fetchDataUsingFetch()\r\n  }\r\n\r\n  renderHelloUsingAxios() {\r\n    Axios.get('/hello')\r\n      .then(res => this.setState({ hello: res.data }))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  renderFromJsonPlaceholder() {\r\n    axiosInstance.get('/posts')\r\n      .then(res => console.log(res.data))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  fetchDataUsingFetch = async () => {\r\n    await fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(res => res.json())\r\n      .then(json => console.table(json))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.hello ? <div>{this.state.hello}</div> : null}\r\n        {/* <Container1 nickname=\"Cat\"></Container1> */}\r\n        {/* <Component1 name=\"moe\" age=\"25\"></Component1> */}\r\n        <br />\r\n        React\r\n        <Routes />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nexport const initialState = {\r\n  is_authenticated: false,\r\n  profile: null,\r\n  db_profile: null\r\n}\r\n\r\n\r\nconst AuthReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case ACTION_TYPES.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        is_authenticated: true\r\n      }\r\n    case ACTION_TYPES.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        is_authenticated: false\r\n      }\r\n    case ACTION_TYPES.ADD_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null\r\n      }\r\n    case ACTION_TYPES.SET_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        db_profile: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        db_profile: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AuthReducer\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  user_text: 'test',\r\n  other_user_db_profile: null,\r\n  db_other_user_posts: [],\r\n  user_messages: []\r\n}\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case ACTION_TYPES.USER_INPUT:\r\n      return {\r\n        ...state,\r\n        user_text: payload\r\n      }\r\n    case ACTION_TYPES.SET_OTHER_USER_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        other_user_db_profile: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        other_user_db_profile: null\r\n      }\r\n    case ACTION_TYPES.SET_OTHER_USER_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        db_other_user_posts: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        db_other_user_posts: []\r\n      }\r\n    case ACTION_TYPES.SET_USER_MESSAGES:\r\n      return {\r\n        ...state,\r\n        user_messages: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_USER_MESSAGES:\r\n      return {\r\n        ...state,\r\n        user_messages: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nexport const initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  user_posts: [],\r\n  search_posts: []\r\n}\r\n\r\n\r\nconst PostsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case ACTION_TYPES.FETCH_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: []\r\n      }\r\n    case ACTION_TYPES.FETCH_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        user_posts: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        user_posts: []\r\n      }\r\n    case ACTION_TYPES.SEARCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search_posts: payload\r\n      }\r\n    case ACTION_TYPES.SEARCH_POSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        search_posts: []\r\n      }\r\n    case ACTION_TYPES.FETCH_POST_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_POST_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default PostsReducer\r\n","\r\nimport AuthReducer from './auth_reducer';\r\nimport UserReducer from './user_reducer';\r\nimport PostsReducer from './posts_reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth_reducer: AuthReducer,\r\n  user_reducer: UserReducer,\r\n  posts_reducer: PostsReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './store/reducers'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) return undefined\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.log(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(\r\n  applyMiddleware()\r\n));\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}